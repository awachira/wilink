#!/bin/sh

set -e

# determine target
target=$1
if [ -z "$target" ]; then
    if [ -n "`which sw_vers`" ]; then
        target="mac"
    else
        target="windows"
    fi
fi
echo "Target: $target"

# check code is up to date
if [ -n "`git diff`" ]; then
    echo "working copy is dirty!"
    exit 1
fi
git pull
git submodule update --init

# build release
case "$target" in
android)
    cd android
    ant release
    cp bin/wiLink-release-unsigned.apk bin/wiLink-release-unaligned.apk
    jarsigner -verbose bin/wiLink-release-unaligned.apk wifirst
    zipalign -v 4 bin/wiLink-release-unaligned.apk bin/wiLink-release-signed.apk
    rm bin/wiLink-release-unaligned.apk
    ;;
mac)
    rm -rf release-mac
    mkdir release-mac
    cd release-mac
    cmake ..
    make package
    ;;
windows)
    rm -rf release-win32
    mkdir release-win32
    cd release-win32
    PKG_CONFIG_LIBDIR=/usr/i586-mingw32msvc/lib/pkgconfig cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/mingw32.toolchain
    make package
    ;;
*)
    echo "Unsupported target: $target"
    exit 1
    ;;
esac
